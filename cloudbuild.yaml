substitutions:
  _PROJECT_ID: "capstoneproject-462618"
  _GCS_BUCKET_NAME: "capstone-nasa-wildfire-sal"

timeout: 10800s  # 3 hours

steps:
  # 1. Build Docker Image
  - name: 'gcr.io/cloud-builders/docker'
    id: Build_Docker_Image
    args:
      - build
      - -f
      - Dockerfile.train
      - -t
      - us-central1-docker.pkg.dev/${_PROJECT_ID}/capstone/ml-model:${COMMIT_SHA}
      - .

  # 2. Push Image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: Push_Docker_Image
    args:
      - push
      - us-central1-docker.pkg.dev/${_PROJECT_ID}/capstone/ml-model:${COMMIT_SHA}

  # 3. Submit Vertex AI Custom Training Job using GPU
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Vertex_AI_Training
    entrypoint: bash
    args:
      - -c
      - |
        echo "=== Starting Vertex AI GPU training ==="
        JOB_NAME="wildfire-train-$(date +%s)"

        gcloud ai custom-jobs create \
          --region=us-central1 \
          --display-name=$JOB_NAME \
          --project=${_PROJECT_ID} \
          --worker-pool-spec=machine-type=n1-standard-8,replica-count=1,accelerator-type=NVIDIA_TESLA_T4,accelerator-count=1,container-image-uri=us-central1-docker.pkg.dev/${_PROJECT_ID}/capstone/ml-model:${COMMIT_SHA} \
          --args="--bucket=${_GCS_BUCKET_NAME}", "--epochs=10", "--batch-size=64"

  # 4. Verify Artifacts
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Verify_Artifacts
    entrypoint: bash
    args:
      - -c
      - |
        echo "=== Verifying model artifacts ==="
        gsutil ls gs://${_GCS_BUCKET_NAME}/model/tf_model/saved_model.pb || exit 1
        gsutil ls gs://${_GCS_BUCKET_NAME}/model/tf_model/variables/variables.index || exit 1
        echo "Artifacts found and verified."

  # 5. Register the Model
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Register_Model
    entrypoint: bash
    args:
      - -c
      - |
        echo "=== Registering model ==="
        MODEL_URI="gs://${_GCS_BUCKET_NAME}/model/tf_model"
        IMAGE_URI="us-central1-docker.pkg.dev/${_PROJECT_ID}/capstone/ml-model:${COMMIT_SHA}"

        gcloud ai models upload \
          --region=us-central1 \
          --display-name="wildfire-detection-model" \
          --artifact-uri=$MODEL_URI \
          --container-image-uri=$IMAGE_URI \
          --container-predict-route="/predict" \
          --container-health-route="/health" \
          --container-ports=8080 \
          --project=${_PROJECT_ID}

  # 6. Deploy to Vertex AI Endpoint
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy_Model
    entrypoint: bash
    args:
      - -c
      - |
        echo "=== Deploying model to endpoint ==="
        MODEL_ID=$(gcloud ai models list \
          --region=us-central1 \
          --filter="displayName=wildfire-detection-model" \
          --format="value(name)" \
          --limit=1)

        ENDPOINT_ID=$(gcloud ai endpoints list \
          --region=us-central1 \
          --filter="displayName=wildfire-prediction-endpoint" \
          --format="value(name)" \
          --limit=1)

        if [ -z "$ENDPOINT_ID" ]; then
          echo "Creating endpoint..."
          ENDPOINT_ID=$(gcloud ai endpoints create \
            --region=us-central1 \
            --display-name=wildfire-prediction-endpoint \
            --format="value(name)")
        fi

        gcloud ai endpoints deploy-model $ENDPOINT_ID \
          --region=us-central1 \
          --model=$MODEL_ID \
          --display-name="deployed-wildfire-model" \
          --machine-type=n1-standard-2 \
          --traffic-split=0=100 \
          --project=${_PROJECT_ID}

images:
  - us-central1-docker.pkg.dev/${_PROJECT_ID}/capstone/ml-model:${COMMIT_SHA}
