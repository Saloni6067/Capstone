# cloudbuild.yaml
# --------------------------------------------------
# Topâ€‘level substitutions (only these two)
substitutions:
  _GCP_PROJECT_ID: "capstoneproject-462618"
  _GCS_BUCKET_NAME: "capstone-nasa-wildfire-sal"

steps:
  # 1) Build & push the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build_Docker_Image'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/${_GCP_PROJECT_ID}/capstone/ml-model:$COMMIT_SHA'
      - '.'
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push_Docker_Image'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/${_GCP_PROJECT_ID}/capstone/ml-model:$COMMIT_SHA'

  # 2) Submit Vertex AI Custom Training Job
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Vertex_AI_Training'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Starting Vertex AI training..."
        gcloud ai custom-jobs create \
          --region=us-central1 \
          --display-name=wildfire-train-$SHORT_SHA \
          --worker-pool-spec=machine-type=n1-standard-4,replica-count=1,container-image-uri=us-central1-docker.pkg.dev/${_GCP_PROJECT_ID}/capstone/ml-model:$COMMIT_SHA \
          --args="--bucket=${_GCS_BUCKET_NAME}" \
          --project=${_GCP_PROJECT_ID}

  # 3) Register the new model
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Register_Model'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Registering model in Vertex AI..."
        MODEL_DISPLAY_NAME="wildfire-detection-model"
        MODEL_URI="gs://${_GCS_BUCKET_NAME}/model/tf_model/"
        IMAGE_URI="us-central1-docker.pkg.dev/${_GCP_PROJECT_ID}/capstone/ml-model:$COMMIT_SHA"

        gcloud ai models upload \
          --region=us-central1 \
          --display-name="$MODEL_DISPLAY_NAME" \
          --artifact-uri="$MODEL_URI" \
          --container-predict-route="/predict" \
          --container-health-route="/health" \
          --container-ports=8080 \
          --container-image-uri="$IMAGE_URI" \
          --project=${_GCP_PROJECT_ID}

  # 4) Deploy (or update) the model on an endpoint
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy_Model'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Deploying model to Vertex AI endpoint..."
        MODEL_NAME="wildfire-detection-model"
        ENDPOINT_NAME="wildfire-prediction-endpoint"

        # Get model resource name
        MODEL_ID=$(gcloud ai models list \
          --region=us-central1 \
          --filter="displayName:${MODEL_NAME}" \
          --format="value(name)" \
          --limit=1)

        # Ensure endpoint exists
        ENDPOINT_ID=$(gcloud ai endpoints list \
          --region=us-central1 \
          --filter="displayName:${ENDPOINT_NAME}" \
          --format="value(name)" \
          --limit=1)
        if [ -z "$ENDPOINT_ID" ]; then
          ENDPOINT_ID=$(gcloud ai endpoints create \
            --region=us-central1 \
            --display-name="$ENDPOINT_NAME" \
            --project=${_GCP_PROJECT_ID} \
            --format="value(name)")
        fi

        # Deploy model
        gcloud ai endpoints deploy-model "$ENDPOINT_ID" \
          --region=us-central1 \
          --model="$MODEL_ID" \
          --display-name="deployed-wildfire-model-$SHORT_SHA" \
          --machine-type="n1-standard-2" \
          --min-replica-count=1 \
          --max-replica-count=1 \
          --traffic-split=0=100 \
          --project=${_GCP_PROJECT_ID}

images:
  - 'us-central1-docker.pkg.dev/${_GCP_PROJECT_ID}/capstone/ml-model:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
