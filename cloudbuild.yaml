# cloudbuild.yaml

steps:
  # 1) Build & push the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build_Docker_Image'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/capstone/ml-model:$COMMIT_SHA'
      - '.'
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push_Docker_Image'
    args:
      - 'push'
      - 'us-central1-docker.pkg.dev/${PROJECT_ID}/capstone/ml-model:$COMMIT_SHA'

  # 2) Vertex AI Training
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Vertex_AI_Training'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud ai custom-jobs create \
          --region=us-central1 \
          --display-name=wildfire-train-$SHORT_SHA \
          --worker-pool-spec=machine-type=n1-standard-4,replica-count=1,container-image-uri=us-central1-docker.pkg.dev/${PROJECT_ID}/capstone/ml-model:$COMMIT_SHA \
          --args="--bucket=${BUCKET}" \
          --project=${PROJECT_ID}

  # 3) Register Model
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Register_Model'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        MODEL_NAME="wildfire-detection-model"
        MODEL_URI="gs://${BUCKET}/model/tf_model/"
        IMAGE_URI="us-central1-docker.pkg.dev/${PROJECT_ID}/capstone/ml-model:$COMMIT_SHA"
        gcloud ai models upload \
          --region=us-central1 \
          --display-name="$MODEL_NAME" \
          --artifact-uri="$MODEL_URI" \
          --container-predict-route="/predict" \
          --container-health-route="/health" \
          --container-ports=8080 \
          --container-image-uri="$IMAGE_URI" \
          --project=${PROJECT_ID}

  # 4) Deploy Model
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy_Model'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        ENDPOINT_NAME="wildfire-prediction-endpoint"
        MODEL_NAME="wildfire-detection-model"
        MODEL_ID=$(gcloud ai models list --region=us-central1 --filter="displayName:${MODEL_NAME}" --format="value(name)" --limit=1)
        ENDPOINT_ID=$(gcloud ai endpoints list --region=us-central1 --filter="displayName:${ENDPOINT_NAME}" --format="value(name)" --limit=1)
        if [ -z "$ENDPOINT_ID" ]; then
          ENDPOINT_ID=$(gcloud ai endpoints create --region=us-central1 --display-name="$ENDPOINT_NAME" --project=$PROJECT_ID --format="value(name)")
        fi
        gcloud ai endpoints deploy-model "$ENDPOINT_ID" \
          --region=us-central1 \
          --model="$MODEL_ID" \
          --display-name="deployed-wildfire-model-$SHORT_SHA" \
          --machine-type="n1-standard-2" \
          --min-replica-count=1 \
          --max-replica-count=1 \
          --traffic-split=0=100 \
          --project=$PROJECT_ID

images:
  - 'us-central1-docker.pkg.dev/${PROJECT_ID}/capstone/ml-model:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
